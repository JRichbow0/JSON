{
  "Questions": [
    { "ID":1,
      "Level":"Beginner",
      "Question":"What is object-oriented programming?",
      "OptA": "A computer programming model that organizes software design around data, or objects, rather than functions and logic",
      "OptB": "A style of programming characterized by the identification of classes of objects closely linked with the methods (functions) with which they are associated.",
      "OptC": "None of the above",
      "OptD": "Both a and b.",
      "correctOpt": "Both a and b." 
    },

    { "ID":2,
      "Level":"Beginner",
      "Question":"What are the four fundamental concepts of object-oriented programming?",
      "OptA": "Abstraction and Polymorphism",
      "OptB": "Encapsulation",
      "OptC": "Inheritance",
      "OptD": "All of the above.",
      "correctOpt": "All of the above"
      },

    { "ID":3,
      "Level":"Beginner",
      "Question":"What is a class?",
      "OptA": "User-defined data types that act as the blueprint for individual objects, attributes and methods",
      "OptB": "A template definition of the methods and variables in a particular kind of object",
      "OptC": "None of the above.",
      "OptD": "Both a and b.",
      "correctOpt": "Both a and b."
      },

    { "ID":4,
      "Level":"Beginner",
      "Question":"What is an object?",
      "OptA": "Instances of a class created with specifically defined data",
      "OptB": "An abstract data type with the addition of polymorphism and inheritance",
      "OptC": "None of the above.",
      "OptD": "Both a and b.",
      "correctOpt": "Both a and b."
      },

    { "ID":5,
      "Level":"Beginner",
      "Question":"What is abstraction?",
      "OptA": "Data abstraction means hiding the details about the data.",
      "OptB": "Control abstraction means hiding the implementation details.",
      "OptC": "One of the pillars of OOP.",
      "OptD": "All of the above.",
      "correctOpt": "All of the above"
      },

    { "ID":6,
      "Level":"Beginner",
      "Question":"What is encapsulation?",
      "OptA": "The process of enclosing one or more items within a physical or logical package.",
      "OptB": "the bundling of data, along with the methods that operate on that data, into a single unit.",
      "OptC": "Neither a or b.",
      "OptD": "Both a and b.",
      "correctOpt": "Both a and b."
      },

    { "ID":7,
      "Level":"Beginner",
      "Question":"What is inheritance?",
      "OptA": "Inheritance allows us to define a class in terms of another class.",
      "OptB": "mechanism where you can to derive a class from another class for a hierarchy of classes that share a set of attributes and methods.",
      "OptC": "Neither a or b.",
      "OptD": "Both a and b.",
      "correctOpt": "Both a and b."
      },

    { "ID":8,
      "Level":"Beginner",
      "Question":"What is polymorphism?",
      "OptA": "One interface, multiple functions.",
      "OptB": "the provision of a single interface to entities of different types, or the use of a single symbol to represent multiple different types",
      "OptC": "Neither a or b",
      "OptD": "Both a and b.",
      "correctOpt": "Both a and b."
      },

    { "ID":9,
      "Level":"Beginner",
      "Question":"What is the difference between object-oriented programming and structural object programming?",
       "OptA": "Structured programming allows developing a program using a set of modules or functions.",
      "OptB": "The object oriented programming allows constructing a program using a set of objects and their interactions",
      "OptC": "Neither a or b",
      "OptD": "Both a and b.",
      "correctOpt": "Both a and b."
      },

    { "ID":10,
      "Level":"Beginner",
      "Question":"What is the difference between a class and a structure?",
      "OptA": "Structures are value types",
      "OptB": "Classes are reference types",
      "OptC": "Neither a or b",
      "OptD": "Both a and b.",
      "correctOpt": "Both a and b."
      }
  ]
}

